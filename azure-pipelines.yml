trigger:
  - master

variables:
  subscription: 'Azure Subscription'
  location: 'australiaeast'
  resourceGroupNamePrefix: 'wb-fn-process-weather-stations'
  serviceName: observations

stages:
  - stage: create_deployment
    displayName: Create deployment

    jobs:
      - job: create_deployment
        steps:
          - task: UsePythonVersion@0
            displayName: Set Python version to $(python_version)
            inputs:
              versionSpec: '3.6'
              architecture: 'x64'

          - task: CmdLine@2
            displayName: Prepare virtualenv
            inputs:
                script: |
                  pip3 install pipenv
                  make init

          - task: CmdLine@2
            displayName: Run checks
            inputs:
                script: |
                  make check

          - task: CmdLine@2
            displayName: Create requirements.txt
            inputs:
                script: |
                  make requirements

          - bash: |
              if [ -f extensions.csproj ]
              then
                  dotnet build extensions.csproj --output ./bin
              fi
              python3.6 -m venv worker_venv
              source worker_venv/bin/activate
              pip3.6 install setuptools
              pip3.6 install -r requirements.txt

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
              name: 'drop'

  - stage: deploy_dev
    displayName: Deploy to Development
    variables:
      environment: dev
    jobs:
      - job:
        steps:

          - task: DownloadPipelineArtifact@2
            inputs:
                artifact: drop
                path: $(Pipeline.Workspace)/drop

          - task: AzureCLI@1
            displayName: Create the resource group
            inputs:
              azureSubscription: $(subscription)
              scriptLocation: 'inlineScript'
              inlineScript: 'az group create --name $(resourceGroupNamePrefix)-$(environment) --location $(location) --tags environment=$(environment) service=$(serviceName)'

          - task: AzureResourceGroupDeployment@2
            name: deployTemplate
            displayName: Deploy template
            inputs:
              azureSubscription: $(subscription)
              resourceGroupName: $(resourceGroupNamePrefix)-$(environment)
              location: $(location)
              deploymentMode: incremental
              deploymentName: $(resourceGroupNamePrefix)_$(environment)
              csmFile: azuredeploy.json
              overrideParameters: >
                -tagEnvironment $(environment)
                -tagService $(serviceName)
              deploymentOutputs: deploymentOutput

          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: $(subscription)
              appType: functionAppLinux
              appName: '<Name of function app>'
              package: $(Pipeline.Workspace)/drop/build$(Build.BuildId).zip
